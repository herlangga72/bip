{"version":3,"file":"SkipToContent.8c8b01f2.js","sources":["../../node_modules/carbon-components-svelte/src/UIShell/navStore.js","../../node_modules/carbon-icons-svelte/lib/Close20/Close20.svelte","../../node_modules/carbon-icons-svelte/lib/Menu20/Menu20.svelte","../../node_modules/carbon-components-svelte/src/Icon/IconSkeleton.svelte","../../node_modules/carbon-components-svelte/src/Icon/Icon.svelte","../../node_modules/carbon-components-svelte/src/UIShell/SideNav/HamburgerMenu.svelte","../../node_modules/carbon-components-svelte/src/UIShell/GlobalHeader/Header.svelte","../../node_modules/carbon-components-svelte/src/UIShell/SkipToContent.svelte"],"sourcesContent":["import { writable } from \"svelte/store\";\n\nexport const shouldRenderHamburgerMenu = writable(false);\n","<script>\n  let className = undefined;\n  export { className as class };\n  export let id = undefined;\n  export let tabindex = undefined;\n  export let focusable = false;\n  export let title = undefined;\n  export let style = undefined;\n\n  $: ariaLabel = $$props['aria-label'];\n  $: ariaLabelledBy = $$props['aria-labelledby'];\n  $: labelled = ariaLabel || ariaLabelledBy || title;\n  $: attributes = {\n    'aria-label': ariaLabel,\n    'aria-labelledby': ariaLabelledBy,\n    'aria-hidden': labelled ? undefined : true,\n    role: labelled ? 'img' : undefined,\n    focusable: tabindex === '0' ? true : focusable,\n    tabindex\n  };\n</script>\n\n<!-- svelte-ignore a11y-mouse-events-have-key-events -->\n<svg\n  data-carbon-icon=\"Close20\"\n  on:click\n  on:mouseover\n  on:mouseenter\n  on:mouseleave\n  on:keyup\n  on:keydown\n  xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 32 32\" fill=\"currentColor\" width=\"20\" height=\"20\"\n  class={className}\n  preserveAspectRatio=\"xMidYMid meet\"\n  {style}\n  {id}\n  {...attributes}>\n  <path d=\"M24 9.4L22.6 8 16 14.6 9.4 8 8 9.4 14.6 16 8 22.6 9.4 24 16 17.4 22.6 24 24 22.6 17.4 16 24 9.4z\"></path>\n  <slot>\n    {#if title}\n      <title>{title}</title>\n    {/if}\n  </slot>\n</svg>","<script>\n  let className = undefined;\n  export { className as class };\n  export let id = undefined;\n  export let tabindex = undefined;\n  export let focusable = false;\n  export let title = undefined;\n  export let style = undefined;\n\n  $: ariaLabel = $$props['aria-label'];\n  $: ariaLabelledBy = $$props['aria-labelledby'];\n  $: labelled = ariaLabel || ariaLabelledBy || title;\n  $: attributes = {\n    'aria-label': ariaLabel,\n    'aria-labelledby': ariaLabelledBy,\n    'aria-hidden': labelled ? undefined : true,\n    role: labelled ? 'img' : undefined,\n    focusable: tabindex === '0' ? true : focusable,\n    tabindex\n  };\n</script>\n\n<!-- svelte-ignore a11y-mouse-events-have-key-events -->\n<svg\n  data-carbon-icon=\"Menu20\"\n  on:click\n  on:mouseover\n  on:mouseenter\n  on:mouseleave\n  on:keyup\n  on:keydown\n  xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\" width=\"20\" height=\"20\"\n  class={className}\n  preserveAspectRatio=\"xMidYMid meet\"\n  {style}\n  {id}\n  {...attributes}>\n  <path d=\"M2 14.8H18V16H2zM2 11.2H18V12.399999999999999H2zM2 7.6H18V8.799999999999999H2zM2 4H18V5.2H2z\"></path>\n  <slot>\n    {#if title}\n      <title>{title}</title>\n    {/if}\n  </slot>\n</svg>","<script>\n  /**\n   * @deprecated\n   * This component will be removed in version 1.0.0.\n   */\n\n  /** Set the size of the icon */\n  export let size = 16;\n</script>\n\n<div\n  class:bx--icon--skeleton=\"{true}\"\n  {...$$restProps}\n  style=\"{$$restProps.style}; width: {size}px; height: {size}px\"\n  on:click\n  on:mouseover\n  on:mouseenter\n  on:mouseleave\n></div>\n","<script>\n  /**\n   * @deprecated\n   * This component will be removed in version 1.0.0.\n   * Use icons from \"carbon-icons-svelte\" instead\n   */\n\n  /**\n   * @extends {\"./IconSkeleton\"} IconSkeletonProps\n   * @restProps {svg}\n   */\n\n  /**\n   * Specify the icon from `carbon-icons-svelte` to render\n   * @type {typeof import(\"carbon-icons-svelte\").CarbonIcon}\n   */\n  export let render = undefined;\n\n  /** Set to `true` to display the skeleton state */\n  export let skeleton = false;\n\n  import IconSkeleton from \"./IconSkeleton.svelte\";\n</script>\n\n{#if skeleton}\n  <IconSkeleton\n    {...$$restProps}\n    on:click\n    on:mouseover\n    on:mouseenter\n    on:mouseleave\n  />\n{:else}\n  <svelte:component\n    this=\"{render}\"\n    {...$$restProps}\n    on:click\n    on:mouseover\n    on:mouseenter\n    on:mouseleave\n  />\n{/if}\n","<script>\n  /**\n   * Specify the ARIA label for the button\n   * @type {string}\n   */\n  export let ariaLabel = undefined;\n\n  /** Set to `true` to toggle the open state */\n  export let isOpen = false;\n\n  /** Obtain a reference to the HTML button element */\n  export let ref = null;\n\n  import Close20 from \"carbon-icons-svelte/lib/Close20/Close20.svelte\";\n  import Menu20 from \"carbon-icons-svelte/lib/Menu20/Menu20.svelte\";\n  import { Icon } from \"../../Icon\";\n</script>\n\n<button\n  bind:this=\"{ref}\"\n  type=\"button\"\n  title=\"Open menu\"\n  aria-label=\"{ariaLabel}\"\n  class:bx--header__action=\"{true}\"\n  class:bx--header__menu-trigger=\"{true}\"\n  class:bx--header__menu-toggle=\"{true}\"\n  {...$$restProps}\n  on:click\n  on:click=\"{() => (isOpen = !isOpen)}\"\n>\n  <Icon\n    title=\"{isOpen ? 'Close' : 'Open Menu'}\"\n    render=\"{isOpen ? Close20 : Menu20}\"\n  />\n</button>\n","<script>\n  /** Set to `false` to hide the side nav by default */\n  export let expandedByDefault = true;\n\n  /** Set to `true` to open the side nav */\n  export let isSideNavOpen = false;\n\n  /**\n   * Specify the ARIA label for the header\n   * @type {string}\n   */\n  export let uiShellAriaLabel = undefined;\n\n  /**\n   * Specify the `href` attribute\n   * @type {string}\n   */\n  export let href = undefined;\n\n  /**\n   * Specify the company name\n   * @type {string}\n   */\n  export let company = undefined;\n\n  /**\n   * Specify the platform name\n   * Alternatively, use the named slot \"platform\" (e.g., <span slot=\"platform\">...</span>)\n   */\n  export let platformName = \"\";\n\n  /** Set to `true` to persist the hamburger menu */\n  export let persistentHamburgerMenu = false;\n\n  /** Obtain a reference to the HTML anchor element */\n  export let ref = null;\n\n  import { shouldRenderHamburgerMenu } from \"../navStore\";\n  import HamburgerMenu from \"../SideNav/HamburgerMenu.svelte\";\n\n  let winWidth = undefined;\n\n  $: isSideNavOpen =\n    expandedByDefault && winWidth >= 1056 && !persistentHamburgerMenu;\n  $: ariaLabel = company\n    ? `${company} `\n    : \"\" + (uiShellAriaLabel || $$props[\"aria-label\"] || platformName);\n</script>\n\n<svelte:window bind:innerWidth=\"{winWidth}\" />\n\n<header role=\"banner\" aria-label=\"{ariaLabel}\" class:bx--header=\"{true}\">\n  <slot name=\"skip-to-content\" />\n  {#if ($shouldRenderHamburgerMenu && winWidth < 1056) || persistentHamburgerMenu}\n    <HamburgerMenu bind:isOpen=\"{isSideNavOpen}\" />\n  {/if}\n  <a\n    href=\"{href}\"\n    class:bx--header__name=\"{true}\"\n    bind:this=\"{ref}\"\n    {...$$restProps}\n    on:click\n  >\n    {#if company}\n      <span class:bx--header__name--prefix=\"{true}\">{company}&nbsp;</span>\n    {/if}\n    <slot name=\"platform\">{platformName}</slot>\n  </a>\n  <slot />\n</header>\n","<script>\n  /** Specify the `href` attribute */\n  export let href = \"#main-content\";\n\n  /** Specify the tabindex */\n  export let tabindex = \"0\";\n</script>\n\n<a\n  href=\"{href}\"\n  tabindex=\"{tabindex}\"\n  class:bx--skip-to-content=\"{true}\"\n  {...$$restProps}\n  on:click\n>\n  <slot>Skip to main content</slot>\n</a>\n"],"names":["Close20","Menu20"],"mappings":"mVAEY,KAAC,IAA4B,GAAS,uDCsCpC,cAAR,iCAAQ,6CADL,2EAAA,4UAPA,mEAIH,yNAbN,SAcE,ocALO,+FAIH,sJAnCA,EAAY,WAEL,KAAK,WACL,WAAW,WACX,YAAY,OACZ,QAAQ,WACR,QAAQ,sdAEhB,EAAY,EAAQ,mBACpB,EAAiB,EAAQ,wCACzB,EAAW,GAAa,GAAkB,uBAC1C,GACD,aAAc,EACd,kBAAmB,EACnB,cAAe,EAAW,OAAY,GACtC,KAAM,EAAW,MAAQ,OACzB,UAAW,IAAa,IAAM,GAAO,EACrC,2OCsBU,cAAR,iCAAQ,6CADL,2EAAA,2UAPA,mEAIH,qNAbN,SAcE,mcALO,+FAIH,sJAnCA,EAAY,WAEL,KAAK,WACL,WAAW,WACX,YAAY,OACZ,QAAQ,WACR,QAAQ,sdAEhB,EAAY,EAAQ,mBACpB,EAAiB,EAAQ,wCACzB,EAAW,GAAa,GAAkB,uBAC1C,GACD,aAAc,EACd,kBAAmB,EACnB,cAAe,EAAW,OAAY,GACtC,KAAM,EAAW,MAAQ,OACzB,UAAW,IAAa,IAAM,GAAO,EACrC,sNCNE,iBACI,MAAY,kBAAgB,oBAAkB,gHAF3B,YAD7B,uIAEM,oBACI,MAAY,kBAAgB,oBAAkB,mDAF3B,0FAJhB,OAAO,gVC4BZ,YADG,ySACH,qBADG,qYARH,wPAAA,2KAFH,+WARQ,SAAS,WAGT,WAAW,2hBCYZ,KAAS,QAAU,mBAClB,KAASA,GAAUC,+DAVjB,MAIT,6HAHuB,mCACM,kCACD,YAPlC,8IAaY,KAAS,QAAU,4BAClB,KAASD,GAAUC,sFAVjB,WAIT,iCAHuB,mCACM,kCACD,qLApBrB,YAAY,WAGZ,SAAS,OAGT,MAAM,iFAQL,6BASM,GAAU,sXC0BG,0BAAA,+IAAA,iKAUoB,UAAQ,uCAAhB,YAAvC,wCAA+C,0DAE1B,yCAAA,8HAbnB,OAA8B,KAAW,MAAS,eAUjD,6EANE,MAGH,sOAFqB,0CAPM,uBAA+B,YAAlE,qDAKE,uNAHM,MAA8B,KAAW,MAAS,qGAUjD,4LANE,aAGH,+BAFqB,yGAPM,wYAjDtB,oBAAoB,OAGpB,gBAAgB,OAMhB,mBAAmB,WAMnB,OAAO,WAMP,UAAU,WAMV,eAAe,OAGf,0BAA0B,OAG1B,MAAM,QAKb,qFAc2B,2EAKjB,8dAjBX,EACD,GAAqB,GAAY,OAAS,OACzC,EAAY,KACR,KACH,GAAM,IAAoB,EAAQ,eAAiB,wRC/BjD,mJANC,gBACI,MAEP,iHADwB,YAH9B,kKACS,2BACI,WAEP,kCADwB,wKATjB,OAAO,oBAGP,WAAW"}